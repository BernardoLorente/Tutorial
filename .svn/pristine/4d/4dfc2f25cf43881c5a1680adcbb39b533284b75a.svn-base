<?php
/**
 * The model file of report module of ZenTaoPMS.
 *
 * @copyright   Copyright 2009-2013 青岛易软天创网络科技有限公司 (QingDao Nature Easy Soft Network Technology Co,LTD www.cnezsoft.com)
 * @license     LGPL (http://www.gnu.org/licenses/lgpl.html)
 * @author      Chunsheng Wang <chunsheng@cnezsoft.com>
 * @package     report
 * @version     $Id: model.php 4726 2013-05-03 05:51:27Z chencongzhi520@gmail.com $
 * @link        http://www.zentao.net
 */
?>
<?php
class studentModel extends model
{
	/**
     * 老师获取自己名下的学生
     */
    public function getStudents($account = 0, $orderBy = '', $pager = null, $status = null, $education = null)
    {
        if (!$account) $account = $this->session->user->account;
        if (!$education) $education = array($this->lang->student->undergraduate, $this->lang->student->postgraduate);
        if (!$status) $status = array(1, 0, -1);
        if (!$orderBy) $orderBy = 'account';
        
        if (($this->session->userinfo->roleid == 'manager') || ($education == 'all'))
        {
            return $this->dao->select('t1.stu_ID, t2.account, t2.role_id, t2.realname, t2.avatar, t2.gender, t2.email, t2.qq, t2.mobile, t2.phone, t2.`join`, t2.department, t2.specialty, t2.polical_status, t2.title, t2.education, t2.status, t2.deleted, t3.college_name')
                    ->from(TABLE_RELATIONS)->alias(t1) 
                    ->leftJoin(TABLE_USER)->alias(t2)
                    ->on('t1.stu_ID=t2.account')
                    ->leftJoin(TABLE_COLLEGE)->alias(t3)
                    ->on('t2.college_id=t3.college_id')
                    ->where('t1.tea_ID')->eq($account)
                    ->andWhere('t2.status')->in($status)
                    ->andWhere('t2.deleted')->eq(0)
                    ->andWhere('t1.deleted')->eq(0)
                    ->andWhere('t3.status')->eq(1)
                    ->orderBy($orderBy)
                    ->page($pager)
                    ->fetchAll();
        }

        $students = $this->dao->select('t1.stu_ID, t2.account, t2.role_id, t2.realname, t2.avatar, t2.gender, t2.email, t2.qq, t2.mobile, t2.phone, t2.`join`, t2.department, t2.specialty, t2.polical_status, t2.title, t2.education, t2.status, t2.deleted, t3.college_name')
                    ->from(TABLE_RELATIONS)->alias(t1) 
                    ->leftJoin(TABLE_USER)->alias(t2)
                    ->on('t1.stu_ID=t2.account')
                    ->leftJoin(TABLE_COLLEGE)->alias(t3)
                    ->on('t2.college_id=t3.college_id')
                    ->where('t1.tea_ID')->eq($account)
                    ->andWhere('t2.education')->in($education)
                    ->andWhere('t2.status')->in($status)
                    ->andWhere('t2.deleted')->eq(0)
                    ->andWhere('t1.deleted')->eq(0)
                    ->andWhere('t3.status')->eq(1)
                    ->orderBy($orderBy)
                    ->page($pager)
                    ->fetchAll();
        return $students;
    }
    
    public function getAll($account = '', $orderBy, $pager)
    {
        if (!$account) $account = $this->session->user->account;
        return $this->getStudents($account, $orderBy, $pager, array(1,0), 'all');
    }
    /**
     * 获取本科生列表
     */
    public function getUnderGraduate($account = '', $orderBy, $pager)
    {     
        if (!$account)  $account = $this->session->user->account;
        return $this->getStudents($account, $orderBy, $pager, array(1, 0), $this->lang->student->undergraduate);     
    }

    /**
     * 获取研究生列表
     */
    public function getpostgraduate($account = '', $orderBy, $pager)
    {
        if (!$account) $account = $this->session->user->account;

        return $this->getStudents($account, $orderBy, $pager, array(1, 0), $this->lang->student->postgraduate);
    }

    /**
     * 获取毕业生列表
     */
    public function getgraduate($account = '', $orderBy, $pager)
    {
        if (!$account) $account = $this->session->user->account;

        return $this->getStudents($account, $orderBy, $pager, -1);
    }

    /**
     * 根据学院id获取所有学生
     */
    public function getStudentByCollege($collegeID = '', $name = '', $account = '', $pager = null, $orderBy = 'account')
    {
        if (!$collegeID) $collegeID = $this->session->user->college_id;

        $students = $this->dao
                       ->select('account, realname, gender, specialty, education')
                       ->from(TABLE_USER)
                       ->where('deleted')->eq(0)
                       ->andWhere('status')->ne(-1)
                       ->andWhere('college_id')->eq($collegeID)
                       ->andWhere('role_id')->eq('student')
                       ->andWhere('realname')->like('%' . $name . '%')
                       ->andWhere('account')->like('%' . $account . '%')
                       ->orderBy($orderBy)
                       ->page($pager)
                       ->fetchAll();
        
        return $students;
    }
}    
